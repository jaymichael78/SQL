USE [vCloudAir_DW]
GO
/****** Object:  StoredProcedure [dbo].[uspCreateAddExtendedPropertyStatement]    Script Date: 2/22/2017 1:45:23 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROC [dbo].[uspCreateAddExtendedPropertyStatement]  @dbName NVARCHAR (150),  @objectName NVARCHAR (150), @objectType NVARCHAR(2) AS 
/******************************************************************************
NAME: uspCreateAddExtendedPropertyStatement

PURPOSE: TO EASILY CREATE THE ADD EXTENDED PROPERTY STATEMENT FOR COLUMNS ON A PARTICULAR TABLE 

REVISIONS:

Ver		Date		Author						Description
-------	---------	-------------------------	-----------------------------------
1.0		07/06/2016	J.STEVENS					1. CREATED THIS PROC
2.0		02/09/2017	J.STEVENS					1. ADDED IN COLUMN LEVEL METADATA FOR THE COLUMN DATA TYPE
2.1		02/15/2017	J.STEVENS					1. ADDED IN TABLE LEVEL EXTENDED PROPERTIES CREATION 
2.2		02/17/2017	J.STEVENS					1. CHANGED TABLE NAME VARIABLE TO OBJECT NAME VARIABLE AND ADDED OBJECT TYPE VARIABLE
												2. ADDED IN AN IF SECTION FOR TABLE EXTENDED PROPERTIES
												3. ADDED IN FORMAT AND EXAMPLE EXTENED PROPERTIES
2.3		02/21/2017	J.STEVENS					1. ADDED IN FUNCTION METADATA
******************************************************************************/	

IF @objectType = 'U'
BEGIN
DECLARE @numCols INT = (SELECT t.max_column_id_used FROM sys.tables t WHERE t.name = @objectName)

/***** TABLE LEVEL EXTENDED PROPERTIES *****/
SELECT 
t.parent_object_id AS add_extended_property_id,
NULL AS columnName, 
t.name AS tableName,
REPLACE(
	'EXEC sp_addextendedproperty @name = '+CHAR(39)+'Description'+CHAR(39)+',  @value = '+CHAR(39)+'+'+
	'
NAME: '+t.name + '

PURPOSE: 

REVISIONS:

Ver		Date		Author						Description
-------	---------	-------------------------	-----------------------------------
1.0		MM/DD/YYYY	FULL NAME(X.LASTNAME)		1. CREATED THIS TABLE
													TICKET# 

'

	+'+'+CHAR(39)+' , 
	@level0type = '+CHAR(39)+'Schema'+CHAR(39)+', @level0name = '+CHAR(39)+'+'+s.name+'+'+CHAR(39)+',  
	@level1type = '+CHAR(39)+'Table'+CHAR(39)+',  @level1name = '+CHAR(39)+'+'+t.name+'+'+CHAR(39)+'; 
	' ,
	'+', ''
	)AS add_extendedproperty_statement
FROM sys.tables t 
JOIN sys.schemas s ON s.schema_id = t.schema_id
WHERE t.name = ''+@objectName+''


UNION

/***** COLUMN LEVEL - DESCRIPTION - EXTENDED PROPERTIES *****/
SELECT
c.column_id AS add_extended_property_id,
c.name AS columnName,
t.name AS tableName,
--CREATE THE STATEMENT EASILY USE CHAR(39) TO HELP REDUCE THE APOSTROPHE CONFUSION
REPLACE(
'EXEC sp_addextendedproperty @name = '+CHAR(39)+'Description'+CHAR(39)+',  @value = '+CHAR(39)+'+'+UPPER(LEFT(c.name, 1)) + RTRIM(SUBSTRING(c.name, 2, LEN(c.name))) +'+'+CHAR(39)+' , 
@level0type = '+CHAR(39)+'Schema'+CHAR(39)+', @level0name = '+CHAR(39)+'+'+s.name+'+'+CHAR(39)+',  
@level1type = '+CHAR(39)+'Table'+CHAR(39)+',  @level1name = '+CHAR(39)+'+'+t.name+'+'+CHAR(39)+',  
@level2type = '+CHAR(39)+'Column'+CHAR(39)+', @level2name = '+CHAR(39)+'+'+c.name+'+'+CHAR(39)+'; 
	' ,
	'+', ''
	)AS add_extendedproperty_statement
FROM sys.tables t 
	JOIN sys.columns c ON c.object_id = t.object_id
	JOIN sys.schemas s ON s.schema_id = t.schema_id
--NARROW DOWN TO THE HELP WE WANT TO ISOLATE
WHERE t.name = ''+@objectName+''


UNION 

SELECT
@numCols + c.column_id AS add_extended_property_id,
c.name AS columnName,
t.name AS tableName,
--CREATE THE STATEMENT EASILY USE CHAR(39) TO HELP REDUCE THE APOSTROPHE CONFUSION
REPLACE('EXEC sp_addextendedproperty @name = '+CHAR(39)+'Format'+CHAR(39)+',  @value = '+CHAR(39)+'+'+'+'+CHAR(39)+' , 
@level0type = '+CHAR(39)+'Schema'+CHAR(39)+', @level0name = '+CHAR(39)+'+'+s.name+'+'+CHAR(39)+',  
@level1type = '+CHAR(39)+'Table'+CHAR(39)+',  @level1name = '+CHAR(39)+'+'+t.name+'+'+CHAR(39)+',  
@level2type = '+CHAR(39)+'Column'+CHAR(39)+', @level2name = '+CHAR(39)+'+'+c.name+'+'+CHAR(39)+'; 
	' ,
	'+', ''
	)AS add_extendedproperty_statement
FROM sys.tables t 
	JOIN sys.columns c ON c.object_id = t.object_id
	JOIN sys.schemas s ON s.schema_id = t.schema_id
--NARROW DOWN TO THE HELP WE WANT TO ISOLATE
WHERE t.name = ''+@objectName+''

UNION

SELECT
(@numCols*2) + c.column_id AS add_extended_property_id,
c.name AS columnName,
t.name AS tableName,
--CREATE THE STATEMENT EASILY USE CHAR(39) TO HELP REDUCE THE APOSTROPHE CONFUSION
REPLACE('EXEC sp_addextendedproperty @name = '+CHAR(39)+'Example'+CHAR(39)+',  @value = '+CHAR(39)+'+'+'+'+CHAR(39)+' , 
@level0type = '+CHAR(39)+'Schema'+CHAR(39)+', @level0name = '+CHAR(39)+'+'+s.name+'+'+CHAR(39)+',  
@level1type = '+CHAR(39)+'Table'+CHAR(39)+',  @level1name = '+CHAR(39)+'+'+t.name+'+'+CHAR(39)+',  
@level2type = '+CHAR(39)+'Column'+CHAR(39)+', @level2name = '+CHAR(39)+'+'+c.name+'+'+CHAR(39)+'; 
	' ,
	'+', ''
	)AS add_extendedproperty_statement
FROM sys.tables t 
	JOIN sys.columns c ON c.object_id = t.object_id
	JOIN sys.schemas s ON s.schema_id = t.schema_id
--NARROW DOWN TO THE HELP WE WANT TO ISOLATE
WHERE t.name = ''+@objectName+''
ORDER BY add_extended_property_id ASC;

END --END TABLE PORTION


IF @objectType = 'FN'
BEGIN
DECLARE @nParameters INT = (SELECT COUNT(p.parameter_id) AS max_parameter_id FROM sys.all_objects ao JOIN sys.parameters p ON p.object_id = ao.object_id WHERE ao.name = ''+@objectName+'' AND p.parameter_id != 0)
/***** FUNCTION LEVEL EXTENDED PROPERTIES *****/
SELECT 
ao.parent_object_id AS add_extended_property_id,
NULL AS parameterName, 
ao.name AS functionName,
REPLACE(
	'EXEC sp_addextendedproperty @name = '+CHAR(39)+'Description'+CHAR(39)+',  @value = '+CHAR(39)+'+'+
	'
NAME: '+ao.name + '

PURPOSE: 

REVISIONS:

Ver		Date		Author						Description
-------	---------	-------------------------	-----------------------------------
1.0		MM/DD/YYYY	FULL NAME(X.LASTNAME)		1. CREATED THIS FUNCTION
													TICKET# 

'

	+'+'+CHAR(39)+' , 
	@level0type = '+CHAR(39)+'Schema'+CHAR(39)+', @level0name = '+CHAR(39)+'+'+s.name+'+'+CHAR(39)+',  
	@level1type = '+CHAR(39)+'Function'+CHAR(39)+',  @level1name = '+CHAR(39)+'+'+ao.name+'+'+CHAR(39)+'; 
	' ,
	'+', ''
	)AS add_extendedproperty_statement
FROM sys.all_objects ao
JOIN sys.schemas s ON s.schema_id = ao.schema_id
WHERE ao.name = ''+@objectName+''
UNION 
---OUTPUT FORMAT 
SELECT 
ao.parent_object_id AS add_extended_property_id,
NULL AS parameterName, 
ao.name AS functionName,
REPLACE(
	'EXEC sp_addextendedproperty @name = '+CHAR(39)+'OUTPUT PARAMETER FORMAT'+CHAR(39)+',  @value = '+CHAR(39)+'+'+'+'+CHAR(39)+' ,
	@level0type = '+CHAR(39)+'Schema'+CHAR(39)+', @level0name = '+CHAR(39)+'+'+s.name+'+'+CHAR(39)+',  
	@level1type = '+CHAR(39)+'Function'+CHAR(39)+',  @level1name = '+CHAR(39)+'+'+ao.name+'+'+CHAR(39)+'; 
	' ,
	'+', ''
	)AS add_extendedproperty_statement
FROM sys.all_objects ao
JOIN sys.schemas s ON s.schema_id = ao.schema_id
WHERE ao.name = ''+@objectName+''
UNION 
---OUTPUT EXAMPLE 
SELECT 
ao.parent_object_id AS add_extended_property_id,
NULL AS parameterName, 
ao.name AS functionName,
REPLACE(
	'EXEC sp_addextendedproperty @name = '+CHAR(39)+'OUTPUT PARAMETER EXAMPLE'+CHAR(39)+',  @value = '+CHAR(39)+'+'+'+'+CHAR(39)+' ,
	@level0type = '+CHAR(39)+'Schema'+CHAR(39)+', @level0name = '+CHAR(39)+'+'+s.name+'+'+CHAR(39)+',  
	@level1type = '+CHAR(39)+'Function'+CHAR(39)+',  @level1name = '+CHAR(39)+'+'+ao.name+'+'+CHAR(39)+'; 
	' ,
	'+', ''
	)AS add_extendedproperty_statement
FROM sys.all_objects ao
JOIN sys.schemas s ON s.schema_id = ao.schema_id
WHERE ao.name = ''+@objectName+''


UNION 
/***** PARAMETER LEVEL - DESCRIPTION - EXTENDED PROPERTIES *****/
SELECT
p.parameter_id AS add_extended_property_id,
p.name AS parameterName,
ao.name AS functionName,
--CREATE THE STATEMENT EASILY USE CHAR(39) TO HELP REDUCE THE APOSTROPHE CONFUSION
REPLACE('EXEC sp_addextendedproperty @name = '+CHAR(39)+'Description'+CHAR(39)+',  @value = '+CHAR(39)+'+'+UPPER(LEFT(p.name, 1)) + RTRIM(SUBSTRING(p.name, 2, LEN(p.name))) +'+'+CHAR(39)+' ,  
@level0type = '+CHAR(39)+'Schema'+CHAR(39)+', @level0name = '+CHAR(39)+'+'+s.name+'+'+CHAR(39)+',  
@level1type = '+CHAR(39)+'Function'+CHAR(39)+',  @level1name = '+CHAR(39)+'+'+ao.name+'+'+CHAR(39)+',  
@level2type = '+CHAR(39)+'Parameter'+CHAR(39)+', @level2name = '+CHAR(39)+'+'+p.name+'+'+CHAR(39)+'; 
	' ,
	'+', ''
	)AS add_extendedproperty_statement
FROM sys.all_objects ao 
	JOIN sys.parameters p ON p.object_id = ao.object_id
	JOIN sys.schemas s ON s.schema_id = ao.schema_id
--NARROW DOWN TO THE HELP WE WANT TO ISOLATE
WHERE ao.name = ''+@objectName+'' AND p.parameter_id != 0



UNION
/***** PARAMETER LEVEL - FORMAT - EXTENDED PROPERTIES *****/
SELECT
@nParameters + p.parameter_id AS add_extended_property_id,
p.name AS parameterName,
ao.name AS functionName,
--CREATE THE STATEMENT EASILY USE CHAR(39) TO HELP REDUCE THE APOSTROPHE CONFUSION
REPLACE('EXEC sp_addextendedproperty @name = '+CHAR(39)+'Format'+CHAR(39)+',  @value = '+CHAR(39)+'+'+'+'+CHAR(39)+' , 
@level0type = '+CHAR(39)+'Schema'+CHAR(39)+', @level0name = '+CHAR(39)+'+'+s.name+'+'+CHAR(39)+',  
@level1type = '+CHAR(39)+'Function'+CHAR(39)+',  @level1name = '+CHAR(39)+'+'+ao.name+'+'+CHAR(39)+',  
@level2type = '+CHAR(39)+'Parameter'+CHAR(39)+', @level2name = '+CHAR(39)+'+'+p.name+'+'+CHAR(39)+'; 
	' ,
	'+', ''
	)AS add_extendedproperty_statement
FROM sys.all_objects ao 
	JOIN sys.parameters p ON p.object_id = ao.object_id
	JOIN sys.schemas s ON s.schema_id = ao.schema_id
--NARROW DOWN TO THE HELP WE WANT TO ISOLATE
WHERE ao.name = ''+@objectName+'' AND p.parameter_id != 0
UNION
/***** PARAMETER LEVEL - EXAMPLE - EXTENDED PROPERTIES *****/
SELECT
(@nParameters*2) + p.parameter_id AS add_extended_property_id,
p.name AS parameterName,
ao.name AS functionName,
--CREATE THE STATEMENT EASILY USE CHAR(39) TO HELP REDUCE THE APOSTROPHE CONFUSION
REPLACE('EXEC sp_addextendedproperty @name = '+CHAR(39)+'Example'+CHAR(39)+',  @value = '+CHAR(39)+'+'+'+'+CHAR(39)+' , 
@level0type = '+CHAR(39)+'Schema'+CHAR(39)+', @level0name = '+CHAR(39)+'+'+s.name+'+'+CHAR(39)+',  
@level1type = '+CHAR(39)+'Function'+CHAR(39)+',  @level1name = '+CHAR(39)+'+'+ao.name+'+'+CHAR(39)+',  
@level2type = '+CHAR(39)+'Parameter'+CHAR(39)+', @level2name = '+CHAR(39)+'+'+p.name+'+'+CHAR(39)+'; 
	' ,
	'+', ''
	)AS add_extendedproperty_statement
FROM sys.all_objects ao 
	JOIN sys.parameters p ON p.object_id = ao.object_id
	JOIN sys.schemas s ON s.schema_id = ao.schema_id
--NARROW DOWN TO THE HELP WE WANT TO ISOLATE
WHERE ao.name = ''+@objectName+'' AND p.parameter_id != 0
END
